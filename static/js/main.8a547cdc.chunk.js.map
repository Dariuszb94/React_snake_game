{"version":3,"sources":["const.js","Cells.js","Game.js","index.js"],"names":["KEYS","DIRS","37","38","39","40","Cells","board","handleKey","cells","row","col","key","value","className","push","style","width","COLS","height","ROWS","tabIndex","onKeyDown","Game","props","event","direction","nativeEvent","keyCode","diff","Math","abs","nextDirecion","state","snake","gameOver","start","bind","frame","this","setState","head","getNextIndex","food","length","indexOf","i","floor","random","pop","unshift","setTimeout","x","y","Component","ReactDOM","render","document","getElementById"],"mappings":"yNAIaA,EAAY,GAAZA,EAAmB,GAAnBA,EAA8B,GAA9BA,EAAuC,GACvCC,EAAM,CAACC,IAAG,EAAMC,IAAG,EAAMC,IAAG,EAAMC,IAAG,GCkBnCC,MAnBf,YAEA,IAFmC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,UACjBC,EAAO,GACJC,EAAI,EAAEA,EDNG,GCMOA,IACxB,IAAK,IAAIC,EAAI,EAAGA,EDPU,GCODA,IAAM,CAC9B,IAAMC,EDRmB,GCQVF,EAAIC,EACbE,EAAMN,EAAMK,GACZE,EDTU,ICSAD,EAAe,YDTP,ICSqBA,EAAgB,YAAc,OAC3EJ,EAAMM,KAAK,yBAAKH,IAAKA,EAAKE,UAAWA,KAGvC,OAAQ,yBACRE,MAAO,CAACC,MAAMC,IAAWC,OAAOC,KAChCC,SAAU,EACVC,UAAWd,EACVM,UAAU,SACTL,ICoGac,G,kBAhHd,WAAYC,GAAO,IAAD,8BACjB,4CAAMA,KAsERhB,UAAY,SAACiB,GAEZ,IAAMC,EAAUD,EAAME,YAAYC,QAE7BC,EAAKC,KAAKC,IAAI,EAAKP,MAAME,UAAUA,GACtCzB,EAAKyB,IAAuB,IAATG,GAAuB,IAATA,IACnC,EAAKG,aAAaN,IA3EjB,EAAKO,MAAM,CACb1B,MAAM,GACN2B,MAAM,GACNR,UAAU,KACVS,UAAS,GAEP,EAAKC,MAAM,EAAKA,MAAMC,KAAX,gBACX,EAAKC,MAAM,EAAKA,MAAMD,KAAX,gBACX,EAAK7B,UAAU,EAAKA,UAAU6B,KAAf,gBAVE,E,iFAalBE,KAAKH,U,8BAGG,IAAD,OACF7B,EAAM,GACN2B,EAAM,CFvBO,IEwBnB3B,EFxBmB,IADD,EE2BlBgC,KAAKC,SAAS,CACbjC,QACA2B,QACAR,UAAW1B,IACV,WACD,EAAKsC,a,8BAIG,IAAD,SACsBC,KAAKN,MAA9BC,EADG,EACHA,MAAO3B,EADJ,EACIA,MAAOmB,EADX,EACWA,UACbe,EAAKF,KAAKG,aAAaR,EAAM,GAAGR,GAEhCiB,EFxCoB,IEwCfpC,EAAMkC,IAAiC,IAAjBP,EAAMU,OAEvC,IAA6B,IAAzBV,EAAMW,QAAQJ,GAAlB,CAKA,GAAIE,EAAK,CACR,IACIG,EAEJ,GACDA,EAAEhB,KAAKiB,MAJS3B,IAIHU,KAAKkB,gBAEXzC,EAAMuC,IACXvC,EAAMuC,GFvDkB,OEyDzBvC,EAAM2B,EAAMe,OAAO,KAGpB1C,EAAMkC,GF5DY,EE6DlBP,EAAMgB,QAAQT,GAEXF,KAAKP,eACPN,EAAUa,KAAKP,aACfO,KAAKP,aAAa,MAGnBO,KAAKC,SAAS,CACbjC,QACA2B,QACAR,cACC,WACDyB,WAAW,EAAKb,MAAO,aA9BvBC,KAAKC,SAAS,CAACL,UAAS,M,mCAgDXM,EAAMf,GAClB,IAAI0B,EAAEX,EF7FmB,GE8FrBY,EAAEvB,KAAKiB,MAAMN,EF9FQ,IEgG3B,OAAOf,GACN,KAAK1B,EAASqD,EAAIA,GAAG,EAAIjC,GAAQiC,EAAE,EAAG,MAEtC,KAAKrD,EAAWqD,EAAIA,GFnGH,GEmGc,EAAIA,EAAE,EAAG,MAExC,KAAKrD,EAAWoD,EAAIA,GAAG,EAAIlC,GAASkC,EAAE,EAAG,MAEzC,KAAKpD,EAAYoD,EAAIA,GAAGlC,GAAS,EAAIkC,EAAE,EAAG,MAE1C,QAAS,OAEV,OF3G2B,GE2GdC,EAAGD,I,+BAEN,IACD7C,EAAOgC,KAAKN,MAAZ1B,MACT,OACC,kBAAC,EAAD,CACAC,UAAW+B,KAAK/B,UAChBD,MAAOA,Q,GA5GW+C,cCFnBC,IAASC,OAAO,kBAAC,EAAD,MAAUC,SAASC,eAAe,U","file":"static/js/main.8a547cdc.chunk.js","sourcesContent":["export const ROWS=20, COLS=20, CELL=30;\r\nexport const BODY=1, FOOD=2; \r\nexport const START=44; //where it starts\r\n\r\nexport const KEYS={left: 37, up:38, right: 39, down:40}; //keys for move\r\nexport const DIRS ={37:true, 38:true, 39:true, 40:true}; // keys confirmation\r\n\r\n","import React from 'react';\r\nimport {ROWS, COLS, CELL, BODY, FOOD } from './const';\r\n\r\n\r\nfunction Cells({board, handleKey}){\r\nconst cells =[];\r\nfor (let row=0;row<ROWS; row++){\r\n\tfor (let col=0; col<COLS;col++){\r\n\t\tconst key=COLS*row+col;\r\n\t\tconst value=board[key];\r\n\t\tconst className=value===BODY ? 'body-cell' : value ===FOOD ? 'food-cell' : 'cell';\r\n\t\tcells.push(<div key={key} className={className}/>)\r\n\t}\r\n}\r\nreturn (<div \r\nstyle={{width:COLS*CELL, height:ROWS*CELL}}\r\ntabIndex={0}\r\nonKeyDown={handleKey}\r\n\tclassName='board'>\r\n\t{cells}\r\n\t</div>)\r\n}\r\n\r\nexport default Cells;","import React, {Component} from 'react';\r\nimport Cells from './Cells';\r\nimport {START, BODY, FOOD, KEYS, COLS, ROWS, DIRS} from './const';\r\nimport './style.css';\r\n\r\n\r\nclass Game extends Component {\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\nboard:[],\r\nsnake:[],\r\ndirection:null,\r\ngameOver:false\r\n\t\t};\r\n\t\tthis.start=this.start.bind(this);\r\n\t\tthis.frame=this.frame.bind(this);\r\n\t\tthis.handleKey=this.handleKey.bind(this);\r\n\t}\r\ncomponentDidMount(){\r\n\tthis.start();\r\n}\r\n\r\n\tstart(){\r\nconst board=[];\r\nconst snake=[START];\r\nboard[START]=BODY;\r\n\r\nthis.setState({\r\n\tboard,\r\n\tsnake,\r\n\tdirection: KEYS.down\r\n},()=>{\r\n\tthis.frame();\r\n});\r\n\t}\r\n\r\n\tframe(){\r\nlet {snake, board, direction}=this.state;\r\nconst head=this.getNextIndex(snake[0],direction);\r\n\r\nconst food=board[head]===FOOD || snake.length === 1; \r\n\r\nif (snake.indexOf(head) !== -1){\r\n\tthis.setState({gameOver:true});\r\n\treturn;\r\n}\r\n\r\nif (food){\r\n\tconst maxCells=ROWS * COLS; \r\n\tlet i;\r\n\r\n\tdo{\r\ni=Math.floor(Math.random()*maxCells)\r\n\t}\r\n\twhile(board[i])\r\n\t\tboard[i]=FOOD;\r\n}else{\r\n\tboard[snake.pop()]=null;\r\n}\r\n\r\nboard[head]=BODY;\r\nsnake.unshift(head);\r\n\r\nif(this.nextDirecion){\r\n\tdirection=this.nextDirecion;\r\n\tthis.nextDirecion=null;\r\n}\r\n\r\nthis.setState({\r\n\tboard,\r\n\tsnake,\r\n\tdirection\r\n},()=>{\r\n\tsetTimeout(this.frame, 200)\r\n})\r\n\t}\r\n\r\nhandleKey = (event)=>{\r\n\r\n\tconst direction=event.nativeEvent.keyCode;\r\n\r\nconst diff=Math.abs(this.props.direction-direction);\r\nif(DIRS[direction] && diff !== 0 && diff !== 2){\r\n\tthis.nextDirecion=direction;\r\n\r\n\r\n}\r\n}\r\n\r\n\r\n\r\n\tgetNextIndex(head, direction){\r\n\t\tlet x=head%COLS;\r\n\t\tlet y=Math.floor(head/COLS);\r\n\r\nswitch(direction){\r\n\tcase KEYS.up: y = y<=0 ? ROWS-1: y-1; break;\r\n\r\n\tcase KEYS.down: y = y>= ROWS ? 0 : y+1; break;\r\n\r\n\tcase KEYS.left: x = x<=0 ? COLS-1 : x-1; break;\r\n\r\n\tcase KEYS.right: x = x>=COLS-1 ? 0 : x+1; break;\r\n\r\n\tdefault: return;\r\n}\r\nreturn (COLS*y)+x;\r\n\t}\r\n\trender(){\r\n\t\tconst {board}=this.state;\r\nreturn (\r\n\t<Cells \r\n\thandleKey={this.handleKey}\r\n\tboard={board}\r\n\t/>\r\n\t)\r\n\t}\r\n}\r\nexport default Game;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Game from './Game';\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\n"],"sourceRoot":""}